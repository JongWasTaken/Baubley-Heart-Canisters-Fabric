plugins {
	id 'fabric-loom' version '1.6-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven { url 'https://maven.wispforest.io' }
	maven { url "https://cursemaven.com" }
	maven {
		name = "Fuzs Mod Resources"
		url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/"
	}
	maven {
		name = "Terraformers"
		url = "https://maven.terraformersmc.com/"
	}
	maven {
		name = "Ladysnake Mods"
		url = 'https://maven.ladysnake.org/releases'
	}
	maven {
		name = "Jared's maven"
		url = "https://maven.blamejared.com/"
	}
}

loom {
    splitEnvironmentSourceSets()
	accessWidenerPath = file("src/main/resources/bhc.accesswidener")
	mods {
		"bhc" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}

}


dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// fabric api
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// owo
	modImplementation "io.wispforest:owo-lib:${project.owo_version}"
	include "io.wispforest:owo-sentinel:${project.owo_version}"


	// trinkets
	modImplementation "dev.emi:trinkets:${project.trinkets_version}"

	// forge config api
	modApi "fuzs.forgeconfigapiport:forgeconfigapiport-fabric:${fca_version}"
	include "fuzs.forgeconfigapiport:forgeconfigapiport-fabric:${fca_version}"
	modLocalRuntime "fuzs.forgeconfigscreens:forgeconfigscreens-fabric:${fca_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand(Map<String, Object>.of(
				"version", project.version.toString().split("\\+")[0],
				"loader_version", loader_version,
				"minecraft_version", minecraft_version,
				"fabric_version", fabric_version.toString().split("\\+")[0],
				"owo_version", owo_version.toString().split("\\+")[0],
				"trinkets_version", trinkets_version
		))
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	//withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}